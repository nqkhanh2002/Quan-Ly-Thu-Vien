/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package BorrowAndReturnManager.BorrowManager.View;

import BorrowAndReturnManager.BorrowManager.Model.mdl_thedocgia;
import LoginAndRegister.MyConnection;
import java.awt.Color;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Admin
 */
public class jf_update extends javax.swing.JFrame {

    public jf_update(int MAPHIEUMUONSACH, String NGAYMUON, int MADOCGIA) {
        initComponents();
        getListTHEDOCGIA();
        setUpScreen(MAPHIEUMUONSACH, NGAYMUON, MADOCGIA);
        this.setLocationRelativeTo(null);
        this.setTitle("Borrow Manager - Update");
        setDefaultCloseOperation(this.DISPOSE_ON_CLOSE);
    }
    
    public jf_update() {
        initComponents();
        jdcNgayMuon.getJCalendar().setMaxSelectableDate(new Date());
        getListTHEDOCGIA();
        this.setLocationRelativeTo(null);
        this.setTitle("Borrow Manager - Update");
        setDefaultCloseOperation(this.DISPOSE_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnExit = new javax.swing.JButton();
        jpnView3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        classTableModel3 = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jtfMaPhieuMuonSach = new javax.swing.JTextField();
        jtfMaDocGia = new javax.swing.JTextField();
        jdcNgayMuon = new com.toedter.calendar.JDateChooser();
        btnSave = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        classTableModel2 = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        jtfSearchDocGia = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(251, 224, 196));

        btnExit.setBackground(new java.awt.Color(114, 158, 190));
        btnExit.setFont(new java.awt.Font("SF Pro Display", 1, 14)); // NOI18N
        btnExit.setText("Exit");
        btnExit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnExitMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnExitMouseExited(evt);
            }
        });
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        classTableModel3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "             Mã độc giả", "                     Họ tên"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        classTableModel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                classTableModel3MouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(classTableModel3);

        javax.swing.GroupLayout jpnView3Layout = new javax.swing.GroupLayout(jpnView3);
        jpnView3.setLayout(jpnView3Layout);
        jpnView3Layout.setHorizontalGroup(
            jpnView3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpnView3Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 374, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jpnView3Layout.setVerticalGroup(
            jpnView3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnView3Layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 2, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(114, 158, 190));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Borrow Manager", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("SF Pro Display", 1, 24), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("SF Pro Display", 1, 18)); // NOI18N
        jLabel1.setText("Mã phiếu mượn sách:");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, -1, -1));

        jLabel3.setFont(new java.awt.Font("SF Pro Display", 1, 18)); // NOI18N
        jLabel3.setText("Mã độc giả:");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 50, -1, -1));

        jLabel7.setFont(new java.awt.Font("SF Pro Display", 1, 18)); // NOI18N
        jLabel7.setText("Ngày mượn:");
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 100, -1, -1));

        jtfMaPhieuMuonSach.setEditable(false);
        jtfMaPhieuMuonSach.setBackground(new java.awt.Color(204, 204, 204));
        jtfMaPhieuMuonSach.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jPanel2.add(jtfMaPhieuMuonSach, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 50, 120, 30));

        jtfMaDocGia.setEditable(false);
        jtfMaDocGia.setBackground(new java.awt.Color(204, 204, 204));
        jtfMaDocGia.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jPanel2.add(jtfMaDocGia, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 50, 150, 30));

        jdcNgayMuon.setDateFormatString("dd/MM/yyyy");
        jdcNgayMuon.setFont(new java.awt.Font("SF Pro Display", 0, 14)); // NOI18N
        jPanel2.add(jdcNgayMuon, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 100, 160, 30));

        btnSave.setBackground(new java.awt.Color(114, 158, 190));
        btnSave.setFont(new java.awt.Font("SF Pro Display", 1, 14)); // NOI18N
        btnSave.setText("Save");
        btnSave.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnSaveMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnSaveMouseExited(evt);
            }
        });
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Mã sách đã chọn");

        classTableModel2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "                  Mã sách"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane4.setViewportView(classTableModel2);

        jLabel8.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        jLabel8.setText("Tìm kiếm tên độc giả:");

        jtfSearchDocGia.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtfSearchDocGiaKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 621, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jpnView3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(54, 54, 54))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29))))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(33, 33, 33)
                    .addComponent(jLabel8)
                    .addGap(18, 18, 18)
                    .addComponent(jtfSearchDocGia, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(76, 76, 76)
                    .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(23, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addComponent(jpnView3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jtfSearchDocGia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap(325, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnExitMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnExitMouseEntered
        btnExit.setBackground(new Color(79,110,133));
    }//GEN-LAST:event_btnExitMouseEntered

    private void btnExitMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnExitMouseExited
        btnExit.setBackground(new Color(114,158,190));
    }//GEN-LAST:event_btnExitMouseExited

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        int confirmed = JOptionPane.showConfirmDialog(null, 
            "Do you want to exit Update?", "Exit Update",
            JOptionPane.YES_NO_OPTION);

        if (confirmed == JOptionPane.YES_OPTION) {
            this.dispose();
        }
        else { setDefaultCloseOperation(this.DO_NOTHING_ON_CLOSE); }
    }//GEN-LAST:event_btnExitActionPerformed

    private void classTableModel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_classTableModel3MouseClicked
        int i = classTableModel3.getSelectedRow();
        TableModel model = classTableModel3.getModel();
        jtfMaDocGia.setText(model.getValueAt(i, 0).toString());
    }//GEN-LAST:event_classTableModel3MouseClicked

    private void btnSaveMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSaveMouseEntered
        btnSave.setBackground(new Color(79,110,133));
    }//GEN-LAST:event_btnSaveMouseEntered

    private void btnSaveMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSaveMouseExited
        btnSave.setBackground(new Color(114,158,190));
    }//GEN-LAST:event_btnSaveMouseExited

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        String sMadocgia = jtfMaDocGia.getText().toString();
        Date date = jdcNgayMuon.getDate();
        DateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
        String sDate = dateFormat.format(date);
        String sMaphieumuonsach = jtfMaPhieuMuonSach.getText().toString();
        if(!sMadocgia.trim().equals("") && !sDate.trim().equals("")) {
            int madocgia = Integer.parseInt(sMadocgia);
            int maphieumuonsach = Integer.parseInt(sMaphieumuonsach);
            PreparedStatement ps;
            int rs;
            String query = "Update phieumuonsach set NGAYMUON = '" + sDate + "', MADOCGIA = '" + madocgia 
                    + "' where MAPHIEUMUONSACH='" + maphieumuonsach + "';";
            try {
                ps = MyConnection.getConnection().prepareStatement(query);
                rs = ps.executeUpdate();
                if(rs > 0) {
                    DefaultTableModel model1 = (DefaultTableModel) classTableModel3.getModel();
                    model1.setRowCount(0);
                    getListTHEDOCGIA();
                    jtfMaPhieuMuonSach.setText("");
                    jtfMaDocGia.setText("");
                    Date today = Calendar.getInstance().getTime();
                    String temp =  dateFormat.format(today.getTime());
                    Date date1 = null;
                    try {
                       date1 = new SimpleDateFormat("dd/MM/yyyy").parse(temp);
                    } catch (Exception e) {
                    }
                    jdcNgayMuon.setDate(date1);
                    DefaultTableModel model = (DefaultTableModel) classTableModel2.getModel();
                    model.setRowCount(0);
                    JOptionPane.showMessageDialog(null, "Đã cập nhật phiếu mượn sách thành công!!!");
                }
                else JOptionPane.showMessageDialog(null, "Cập nhật phiếu mượn sách thất bại!!!");
                ps.close();

            } catch (Exception e) {
                e.printStackTrace();
            }
        }
        else if(sMadocgia.trim().equals("")) JOptionPane.showMessageDialog(null, "Chưa chọn độc giả! Vui lòng chọn!!!");
        else if(sDate.trim().equals("")) JOptionPane.showMessageDialog(null, "Chưa chọn ngày! Vui lòng chọn!!!");
    }//GEN-LAST:event_btnSaveActionPerformed

    private void jtfSearchDocGiaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfSearchDocGiaKeyReleased
        String key_hoten = jtfSearchDocGia.getText().trim();
        DefaultTableModel model = (DefaultTableModel) classTableModel3.getModel();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(model);
        classTableModel3.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(key_hoten, 1));
    }//GEN-LAST:event_jtfSearchDocGiaKeyReleased

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        ImageIcon icon = new ImageIcon(this.getClass().getClassLoader().getResource("assets/borrow_and_return.png"));
        setIconImage(icon.getImage());
    }//GEN-LAST:event_formWindowActivated

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        int confirmed = JOptionPane.showConfirmDialog(null, 
            "Do you want to exit Update?", "Exit Update",
        JOptionPane.YES_NO_OPTION);

        if (confirmed == JOptionPane.YES_OPTION) {
            this.dispose();
        }
        else { setDefaultCloseOperation(this.DO_NOTHING_ON_CLOSE); }
    }//GEN-LAST:event_formWindowClosing

    
    public void getListTHEDOCGIA() {
	DefaultTableModel defaultTable = (DefaultTableModel) classTableModel3.getModel();
        TableColumn col0 = classTableModel3.getColumnModel().getColumn(0);
        col0.setPreferredWidth(0);
	List<mdl_thedocgia> thedocgiaList = new ArrayList<>();
        PreparedStatement ps;
        ResultSet rs;
        String query = "Select MADOCGIA, HOTEN, NGAYHETHAN from thedocgia where MADOCGIA not in (Select MADOCGIA from phieumuonsach where MAPHIEUMUONSACH not in (Select MAPHIEUMUONSACH from phieutrasach));";
	try {
            ps = MyConnection.getConnection().prepareStatement(query);
            rs = ps.executeQuery();
            while (rs.next()) {
		int MADOCGIA = rs.getInt("MADOCGIA");
		String HOTEN = rs.getString("HOTEN");
                
                String NGAYHETHAN = rs.getString("NGAYHETHAN");
                Date date_ngayhethan = null;
                try {
                    date_ngayhethan = new SimpleDateFormat("dd/MM/yyyy").parse(NGAYHETHAN);
                } catch (ParseException ex) {
                    Logger.getLogger(jf_add.class.getName()).log(Level.SEVERE, null, ex);
                }
                
                Date today = Calendar.getInstance().getTime();
                DateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
                String temp =  dateFormat.format(today.getTime());
                Date date_now = null;
                try {
                    date_now = new SimpleDateFormat("dd/MM/yyyy").parse(temp);
                } catch (ParseException ex) {
                    Logger.getLogger(jf_add.class.getName()).log(Level.SEVERE, null, ex);
                }
                
                if(date_ngayhethan.compareTo(date_now) > 0) {
                    mdl_thedocgia thedocgia = new mdl_thedocgia(MADOCGIA, HOTEN);
                    thedocgiaList.add(thedocgia);
                }
            }	
            Object[] row = new Object[2];
            for(int i = 0; i <thedocgiaList.size(); i++) {
		row[0] = thedocgiaList.get(i).getMADOCGIA();
		row[1] = thedocgiaList.get(i).getHOTEN();
		defaultTable.addRow(row);
            }
            ps.close();
            rs.close();
	} catch (SQLException e) {
	}
    }
    
    public void getListMASACHSELECTED(int MAPHIEUMUONSACH) {
        jdcNgayMuon.getJCalendar().setMaxSelectableDate(new Date());
	DefaultTableModel defaultTable = (DefaultTableModel) classTableModel2.getModel();
	List<Integer> masachList = new ArrayList<>();
        PreparedStatement ps;
        ResultSet rs;
        String query = "Select MASACH from ctphieumuonsach where MAPHIEUMUONSACH = '" + MAPHIEUMUONSACH + "';";
	try {
            ps = MyConnection.getConnection().prepareStatement(query);
            rs = ps.executeQuery();
            while (rs.next()) {
		int MASACH = rs.getInt("MASACH");
		masachList.add(MASACH);
            }	
            Object[] row = new Object[1];
            for(int i = 0; i <masachList.size(); i++) {
		row[0] = masachList.get(i);
		defaultTable.addRow(row);
            }
            ps.close();
            rs.close();
	} catch (SQLException e) {
	}
    }
    
    public void setUpScreen(int MAPHIEUMUONSACH, String NGAYMUON, int MADOCGIA) {
        jtfMaPhieuMuonSach.setText(Integer.toString(MAPHIEUMUONSACH));
        Date date = null;
        try {
            date = new SimpleDateFormat("dd/MM/yyyy").parse(NGAYMUON);
        } catch (ParseException ex) {
            Logger.getLogger(jf_update.class.getName()).log(Level.SEVERE, null, ex);
        }
        jdcNgayMuon.setDate(date);
        jtfMaDocGia.setText(Integer.toString(MADOCGIA));
        getListMASACHSELECTED(MAPHIEUMUONSACH);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(jf_update.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(jf_update.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(jf_update.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(jf_update.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new jf_update().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnSave;
    private javax.swing.JTable classTableModel2;
    private javax.swing.JTable classTableModel3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    public static com.toedter.calendar.JDateChooser jdcNgayMuon;
    private javax.swing.JPanel jpnView3;
    private javax.swing.JTextField jtfMaDocGia;
    private javax.swing.JTextField jtfMaPhieuMuonSach;
    private javax.swing.JTextField jtfSearchDocGia;
    // End of variables declaration//GEN-END:variables
}
